name: Deploy

on:
  workflow_dispatch:
    inputs:
      Version:
        description: 'Version of release'
        required: true
      Outline:
        description: 'An outline text for the release'
        required: true

jobs:
  setup-release:
    if: ${{ github.actor == 'Yuri6037' }}
    runs-on: ubuntu-latest
    steps:
    - name: Trigger automatic documentation
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.DOC_ACCESS_TOKEN }}
        repository: BlockProject3D/BlockProject3D.github.io
        event-type: useless
    - uses: 1466587594/get-current-time@v1
      id: current-time
      with:
        format: "MM-DD-YYYY HH:mm:ss UTC"
        utcOffset: "+00:00"
    - name: Get Version
      id: get_version
      run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)
    - uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.Version }}
        release_name: Release-${{ github.event.inputs.Version }}
        body: |
          ${{ github.event.inputs.Outline }}
          Release version: ${{ github.event.inputs.Version }}
          Built on: ${{ steps.current-time.outputs.time }}
        draft: false
        prerelease: false
  build:
    needs: [ setup-release ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            generator: "DEB"
            ext: "deb"
            osname: "Ubuntu"
          - os: windows-latest
            generator: "WIX"
            ext: "msi"
            osname: "Windows"
          - os: macos-latest
            generator: "STGZ" #productbuild is bugged in CPack
            ext: "sh"
            osname: "OSX"
            env:
              INSTALL_DIR: ""
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - uses: nelonoel/branch-name@v1
    - uses: Yuri6037/setup-cpp@master
    - name: Prepare
      run: |
        pip3 install conan
    - name: Build
      run: |
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_DIR="../"
        cmake --build . --target install --config Debug
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_DIR="../"
        cmake --build . --target install --config Release
    - name: Create Package
      run: |
        cpack -G ${{ matrix.generator }}
        cpack -G ZIP
    - uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: BPF.zip
        asset_name: BPF-${{ matrix.osname }}-x64.zip
        tag: v${{ github.event.inputs.Version }}
        overwrite: true
    - uses: svenstaro/upload-release-action@v1-release
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: BPF.${{ matrix.ext }}
        asset_name: BPF-${{ matrix.osname }}-x64.${{ matrix.ext }}
        tag: v${{ github.event.inputs.Version }}
        overwrite: true

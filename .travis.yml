language: cpp

builddbgscript: &builddbgscript
  script:
    - mkdir build && cd build
    - cmake ..
    - cmake --build .
    - echo $BP_TEST_RUN_CMD && eval $BP_TEST_RUN_CMD
    - cat ../Tests.Console/InputFile | ./Debug/BPF.Tests.Console > testlog
    - diff testlog ../Tests.Console/OutputFile

jobs:
  include:
    - stage: debug-test
      os: windows
      compiler: MSVC
      env:
        - BP_TEST_RUN_CMD="./Debug/BPF.Tests"
      <<: *builddbgscript
    - stage: debug-test
      os: linux
      dist: xenial
      compiler:
        - gcc
        - clang
      env:
        - BP_TEST_RUN_CMD="./Debug/BPF.Tests"
      <<: *builddbgscript
    - stage: debug-test
      os: osx
      compiler: clang
      env:
        - BP_TEST_RUN_CMD="./Debug/BPF.Tests"
      <<: *builddbgscript
    
    - stage: coverage
      os: linux
      dist: xenial
      compiler: gcc
      env:
        - BP_TEST_RUN_CMD="./Debug/BPF.Tests"
      before_install:
        - sudo apt-get install -y lcov
      script:
        - mkdir build && cd build
        - cmake .. -DCOVERAGE=1 > /dev/null
        - cmake --build . > /dev/null
        - eval $BP_TEST_RUN_CMD > /dev/null
        - cat ../Tests.Console/InputFile | ./Debug/BPF.Tests.Console > testlog
        - diff testlog ../Tests.Console/OutputFile
        - lcov --capture --directory . --output-file coverage.info
        - lcov --remove coverage.info '/usr/*' --output-file coverage.info
        - lcov --remove coverage.info '*/gtest/*' --output-file coverage.info
        - lcov --remove coverage.info '*Tests/*' --output-file coverage.info
        - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"

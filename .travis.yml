language: cpp

builddbgscript: &builddbgscript
  script:
    - mkdir build && cd build
    - cmake ..
    - cmake --build .
    - echo $BP_TEST_RUN_CMD && eval $BP_TEST_RUN_CMD
    - cat ../Tests.Console/InputFile | ./Debug/BPF.Tests.Console > testlog
    - diff testlog ../Tests.Console/OutputFile
    - cat ../Tests.Console/InputFileCrash | ./Debug/BPF.Tests.Console > testlog
    - diff testlog ../Tests.Console/OutputFileCrash

jobs:
  include:
    - stage: debug-test
      os: windows
      compiler: MSVC
      env:
        - BP_TEST_RUN_CMD="./Debug/BPF.Tests"
      <<: *builddbgscript
    - stage: debug-test
      os: linux
      dist: xenial
      compiler:
        - gcc
        - clang
      env:
        - BP_TEST_RUN_CMD="./Debug/BPF.Tests"
      <<: *builddbgscript
    - stage: debug-test
      os: osx
      compiler: clang
      env:
        - BP_TEST_RUN_CMD="./Debug/BPF.Tests"
      <<: *builddbgscript
    
    - stage: coverage
      os: linux
      dist: xenial
      compiler: gcc
      env:
        - BP_TEST_RUN_CMD="./Debug/BPF.Tests"
      before_install:
        - sudo apt-get install -y lcov
      script:
        - mkdir build && cd build
        - cmake .. -DCOVERAGE=1 > /dev/null
        - cmake --build . > /dev/null
        - eval $BP_TEST_RUN_CMD > /dev/null
        - cat ../Tests.Console/InputFile | ./Debug/BPF.Tests.Console > testlog
        - diff testlog ../Tests.Console/OutputFile
        - cat ../Tests.Console/InputFileCrash | ./Debug/BPF.Tests.Console > testlog
        - diff testlog ../Tests.Console/OutputFileCrash
        - lcov --capture --directory . --output-file coverage.info
        - lcov --remove coverage.info '/usr/*' --output-file coverage.info
        - lcov --remove coverage.info '*/gtest/*' --output-file coverage.info
        - lcov --remove coverage.info '*Tests/*' --output-file coverage.info
        - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"

    - stage: build-deploy
      os: windows
      compiler: MSVC
      if: branch = release
      script:
        - python ./Deploy.py
      before_deploy:
        - git config --local user.name "BlockProject3D"
        - git config --local user.email "blockproject3d@blockproject3d"
        - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)}
        - git tag $TRAVIS_TAG

    - stage: build-deploy
      os: linux
      dist: xenial
      if: branch = release
      script:
        - python ./Deploy.py
      before_deploy:
        - git config --local user.name "BlockProject3D"
        - git config --local user.email "blockproject3d@blockproject3d"
        - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)}
        - git tag $TRAVIS_TAG

    - stage: build-deploy
      os: osx
      compiler: clang
      if: branch = release
      script:
        - python ./Deploy.py
      before_deploy:
        - git config --local user.name "BlockProject3D"
        - git config --local user.email "blockproject3d@blockproject3d"
        - export TRAVIS_TAG=${TRAVIS_TAG:-$(date +'%Y%m%d%H%M%S')-$(git log --format=%h -1)}
        - git tag $TRAVIS_TAG

deploy:
  provider: releases
  api_key:
    secure: "MLDzrYyIE4ssJ27leCaC3fOqH6IXhoQIxEWmpjyzLSTOKmsv6BbBO+FoWeRHxcZVR7IjLpqfZWE2Yq+1MJ2F9rbB3ryqwX/C3Bp0aZHQLve5
YOWCBO+KFaBCHwFwdU1tUoYHDPopy10rkisQwPAfWjZ7KSlEAOna778n+qa4NJWc655oVF25BOsHUAvtSc7NXizwqk/FXnBp95W2XzQptHzUPSmHiG9h9sC
Wjjq9GRad1HyxDwRbTq8W7o3msvJt7xul4uBv/6A4vZyy6YJrx92Cm9wqcG6F35KBaUaqXkWrrkGWlD3sVxdUoSCbq6hhMb+LzINcWNngdsTWa99HeOOkJp
XuTDTs9RgN6fJwydD06mFqEani0CTwl/+TFFmWuq31IT9N736N6kwhSPRRycxQhOmsXibzalCChDuNrWykMGGybeQmSmtOggQW+YbbvFr4GHddgerBtGXAP
OrCqpgAhyov8LKcxCuaqfJl5xX50DL8S+ydqOTqWWghNKxXC6Y2GzRQpLmT94RxUyLUkbfgXGCAi6BTSIoJZLYKxTSVQ9hVQQURmVdumryUMpcPYcP7it1H
nS4ncw8iYQ07xBdfZ6N0/f/p0ACZg92K5TxP+gczaB4e5ALOB8hm5TQOqhYeeHlHhLPeTDtPUlg5/hjGNYBRI8tS7t8ALVODaAI="
  file: Frmework.zip
  skip_cleanup: true
  on:
    branch: release